plugins {
	id 'org.springframework.boot' version '2.3.12.RELEASE'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.ssb'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext{
	awsSdkVersion = '1.12.13'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Hoxton.SR11")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	
	// bom : aws sdk 모듈간 버전충돌을 방지해주는 버전 관리
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-bom', version: awsSdkVersion, ext: 'pom'
 	implementation group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb'
	
	//lombok 라이브러리
	annotationProcessor 'org.projectlombok:lombok'
	
	//Log Back 라이브러리
	implementation group: 'org.slf4j', name: 'jcl-over-slf4j'
	implementation group: 'ch.qos.logback', name: 'logback-classic'
	implementation group: 'ch.qos.logback', name: 'logback-core'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {

	//@Disabled 를 붙이면 그래들이 실행하지않음
	useJUnitPlatform()
}
